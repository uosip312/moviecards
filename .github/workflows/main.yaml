name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v4

      - name: Instalar JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Construir con Maven
        run: |
            mvn clean package -DskipTests
            ls

      - name: Guardar paquete generado para el trabajo de despliegue
        uses: actions/upload-artifact@v4
        with:
          name: moviecards-java
          path: "${{ github.workspace }}/target/*.jar"

  test:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Descargar repositorio
        uses: actions/checkout@v4

      - name: Instalar JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Instalar Chrome y ChromeDriver para pruebas end to end
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb

          sudo apt --fix-broken install -y

          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          
          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          
          unzip chromedriver.zip

          chmod +x chromedriver

          sudo mv chromedriver /usr/local/bin/

      - name: Ejecutar la aplicación para pruebas end to end
        run: mvn spring-boot:run & sleep 60

      - name: Ejecutar las pruebas unitarias, de integración y end to end
        run: mvn clean verify

  qa:
      needs: test
      runs-on: self-hosted
      continue-on-error: true
      steps:
      - name: Descargar repositorio
        uses: actions/checkout@v4

      - name: Instalar JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Construir con Maven
        run: mvn clean package -DskipTests

      - name: Revisar la calidad con Sonarqube
        run: |
          mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.qualitygate.wait=true -Dsonar.login=admin -Dsonar.password=admin

      - name: Obtener resultados de SonarQube
        id: sonar-result
        run: |
          # Realizar la consulta a la API de SonarQube para fallos críticos del proyecto "moviecards"
          critical_issues=$(curl -u admin:admin -s "http://localhost:9000/api/issues/search?projectKeys=com.lauracercas:moviecards&severities=CRITICAL&resolved=false" | jq '.total')
          echo "Número de fallos críticos: $critical_issues"
          echo "critical_issues=$critical_issues" >> $GITHUB_ENV

  stage:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref=='refs/heads/main'
    environment:
      name: 'Pre-Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-pre-edelacode'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_F8CEE65FA63045FA8570BB90802B029A }}

  deploy:
    runs-on: ubuntu-latest
    needs: qa
    if: needs.qa.result == 'succeeded' && github.ref=='refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Validar fallos críticos antes del despliegue
        id: validate-critical-issues
        run: |
          if [ "$critical_issues" -gt 5 ]; then
            echo "El número de fallos críticos ($critical_issues) supera el límite permitido. Despliegue cancelado."
            exit 1
          else
            echo "Número de fallos críticos aceptable ($critical_issues). Continuando con el despliegue."
          fi
        env:
          critical_issues: ${{ env.critical_issues }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MovieCards-EdelaCode'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_829219595CE84F998D624B7EB8561F1E }}
